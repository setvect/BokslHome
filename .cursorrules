# 복슬홈 프로젝트 Cursor Rules

## 언어 설정
- **항상 한국어로 답변**해주세요.
- 기술적 용어는 한국어와 영어를 병행 사용 가능합니다. (예: "컴포넌트(component)", "API 엔드포인트")
- 코드 주석도 한국어로 작성해주세요.

## 프로젝트 컨텍스트
- **프로젝트명**: 복슬홈 (BokslHome)
- **백엔드**: Spring Boot + Kotlin (완성됨)
- **프론트엔드**: SvelteKit + TypeScript + Tailwind CSS + shadcn-svelte
- **환경**: WSL Ubuntu (개발), Windows (운영)

## 프로젝트 작업 단계 (docs/TODO/frontend-project 참조)
- **1단계**: 기반 설정 (SvelteKit + TypeScript + Tailwind CSS)
- **2단계**: 기본 UI 컴포넌트 (shadcn-svelte + 테마 시스템)
- **3단계**: 기본 레이아웃 (헤더 + 사이드바 + 메인)
- **4단계**: 디자인 시스템 + 폼 시스템 (Superforms + Zod)
- **5단계**: 에디터 컴포넌트 (MarkdownEditor + HtmlEditor)

## 기술 스택 가이드라인
- **Svelte 5 Runes 필수**: `$state()`, `$effect()`, `$derived()` 등 최신 문법만 사용
- **TypeScript 엄격 모드**: 타입 안정성 최우선
- **Tailwind CSS 4.x**: 최신 안정 버전 사용 (`@import "tailwindcss"` 방식)
- **shadcn-svelte**: 메인 UI 컴포넌트 라이브러리

## 코딩 스타일
- **변수명/함수명**: camelCase (영어)
- **주석**: 한국어
- **커밋 메시지**: 한국어
- **파일명**: kebab-case 또는 PascalCase (컴포넌트)

## 답변 스타일
- **단계별 설명** 제공
- **코드 예시** 포함하여 설명
- **문제 해결 과정** 명확히 제시

## Svelte 5 Runes 엄격 규칙
- **절대 Svelte 4 문법 사용 금지**: `let`, `$:`, `export let` 등 구식 문법 사용 시 즉시 수정 요구
- **Props 선언**: `let props = $props()` 형태만 허용
- **반응성**: `$state()`, `$derived()`, `$effect()` 만 사용
- **이벤트 핸들링**: `on:click` 대신 `onclick` 속성 사용
- **컴포넌트 바인딩**: `bind:` 대신 `$bindable()` 사용

## 프로젝트 폴더 구조 규칙
```
src/
├── lib/
│   ├── components/
│   │   ├── ui/              # shadcn-svelte 컴포넌트
│   │   └── layout/          # 레이아웃 컴포넌트
│   ├── stores/              # 전역 상태 관리
│   ├── types/               # TypeScript 타입 정의
│   ├── utils/               # 유틸리티 함수
│   ├── schemas/             # Zod 스키마
│   ├── hooks/               # 커스텀 훅
│   ├── constants/           # 상수 정의
│   └── mock/                # 목 데이터
└── routes/
    ├── (app)/               # 메인 앱 그룹
    └── (design)/            # 디자인 시스템 그룹
```

## 단계별 검증 필수사항
각 단계 완료 시 반드시 확인:
- [ ] `npm run dev` 정상 실행
- [ ] `npm run build` 성공
- [ ] `npm run check` TypeScript 오류 0개
- [ ] `npm run lint` ESLint 경고 해결 (접근성 제외)
- [ ] 브라우저에서 실제 동작 확인

## 특별 지침
- **작업 순서 엄수**: 1단계→2단계→3단계→4단계→5단계 순서로만 진행
- **단계별 완전 완료**: 이전 단계 미완성 시 다음 단계 진행 금지
- **복잡한 작업은 TODO 리스트로 관리**
- **에러 발생 시** 단계별 디버깅 접근
- **성능 최적화** 고려 (번들 크기, 동적 import 등)
- **접근성** 기본 수준 준수 (키보드 네비게이션, aria-label 등)

## 라이브러리 사용 규칙
- **shadcn-svelte**: 의존성 순서에 따른 설치 (Button → Input → Card 등)
- **Superforms + Zod**: 폼 유효성 검사 표준
- **Formsnap v2**: Svelte 5 호환성 확인 후 사용
- **CodeMirror 6 + TinyMCE**: 동적 import로 번들 최적화

## 금지 사항
- **Svelte 4 문법 절대 사용 금지**
- 영어로만 답변하지 말 것
- 코드 없이 이론만 설명하지 말 것
- 사용자 확인 없이 중요 파일 삭제하지 말 것
- 단계 건너뛰기 금지

---
💡 **목표**: 사용자가 복슬홈 프로젝트를 성공적으로 완성할 수 있도록 한국어로 친절하고 정확한 도움 제공
